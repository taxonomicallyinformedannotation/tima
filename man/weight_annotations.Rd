% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weight_annotations.R
\name{weight_annotations}
\alias{weight_annotations}
\title{Weight annotations}
\usage{
weight_annotations(
  library = get_params(step = "weight_annotations")$files$libraries$sop$merged$keys,
  org_tax_ott = get_params(step =
    "weight_annotations")$files$libraries$sop$merged$organisms$taxonomies$ott,
  str_stereo = get_params(step =
    "weight_annotations")$files$libraries$sop$merged$structures$stereo,
  annotations = get_params(step = "weight_annotations")$files$annotations$filtered,
  canopus = get_params(step = "weight_annotations")$files$annotations$prepared$canopus,
  formula = get_params(step = "weight_annotations")$files$annotations$prepared$formula,
  components = get_params(step =
    "weight_annotations")$files$networks$spectral$components$prepared,
  edges = get_params(step = "weight_annotations")$files$networks$spectral$edges$prepared,
  taxa = get_params(step = "weight_annotations")$files$metadata$prepared,
  output = get_params(step = "weight_annotations")$files$annotations$processed,
  candidates_final = get_params(step = "weight_annotations")$annotations$candidates$final,
  weight_spectral = get_params(step = "weight_annotations")$weights$global$spectral,
  weight_chemical = get_params(step = "weight_annotations")$weights$global$chemical,
  weight_biological = get_params(step = "weight_annotations")$weights$global$biological,
  score_biological_domain = get_params(step =
    "weight_annotations")$weights$biological$domain,
  score_biological_kingdom = get_params(step =
    "weight_annotations")$weights$biological$kingdom,
  score_biological_phylum = get_params(step =
    "weight_annotations")$weights$biological$phylum,
  score_biological_class = get_params(step =
    "weight_annotations")$weights$biological$class,
  score_biological_order = get_params(step =
    "weight_annotations")$weights$biological$order,
  score_biological_infraorder = get_params(step =
    "weight_annotations")$weights$biological$infraorder,
  score_biological_family = get_params(step =
    "weight_annotations")$weights$biological$family,
  score_biological_subfamily = get_params(step =
    "weight_annotations")$weights$biological$subfamily,
  score_biological_tribe = get_params(step =
    "weight_annotations")$weights$biological$tribe,
  score_biological_subtribe = get_params(step =
    "weight_annotations")$weights$biological$subtribe,
  score_biological_genus = get_params(step =
    "weight_annotations")$weights$biological$genus,
  score_biological_subgenus = get_params(step =
    "weight_annotations")$weights$biological$subgenus,
  score_biological_species = get_params(step =
    "weight_annotations")$weights$biological$species,
  score_biological_subspecies = get_params(step =
    "weight_annotations")$weights$biological$subspecies,
  score_biological_variety = get_params(step =
    "weight_annotations")$weights$biological$variety,
  score_chemical_cla_kingdom = get_params(step =
    "weight_annotations")$weights$chemical$cla$kingdom,
  score_chemical_cla_superclass = get_params(step =
    "weight_annotations")$weights$chemical$cla$superclass,
  score_chemical_cla_class = get_params(step =
    "weight_annotations")$weights$chemical$cla$class,
  score_chemical_cla_parent = get_params(step =
    "weight_annotations")$weights$chemical$cla$parent,
  score_chemical_npc_pathway = get_params(step =
    "weight_annotations")$weights$chemical$npc$pathway,
  score_chemical_npc_superclass = get_params(step =
    "weight_annotations")$weights$chemical$npc$superclass,
  score_chemical_npc_class = get_params(step =
    "weight_annotations")$weights$chemical$npc$class,
  minimal_consistency = get_params(step =
    "weight_annotations")$annotations$thresholds$consistency,
  minimal_ms1_bio = get_params(step =
    "weight_annotations")$annotations$thresholds$ms1$biological,
  minimal_ms1_chemo = get_params(step =
    "weight_annotations")$annotations$thresholds$ms1$chemical,
  minimal_ms1_condition = get_params(step =
    "weight_annotations")$annotations$thresholds$ms1$condition,
  ms1_only = get_params(step = "weight_annotations")$annotations$ms1only,
  compounds_names = get_params(step = "weight_annotations")$options$compounds_names,
  high_confidence = get_params(step = "weight_annotations")$options$high_confidence,
  remove_ties = get_params(step = "weight_annotations")$options$remove_ties,
  summarize = get_params(step = "weight_annotations")$options$summarize,
  pattern = get_params(step = "weight_annotations")$files$pattern,
  force = get_params(step = "weight_annotations")$options$force
)
}
\arguments{
\item{library}{Library containing the keys}

\item{org_tax_ott}{File containing organisms taxonomy (OTT)}

\item{str_stereo}{File containing structures stereo}

\item{annotations}{Prepared annotations file}

\item{canopus}{Prepared canopus file}

\item{formula}{Prepared formula file}

\item{components}{Prepared components file}

\item{edges}{Prepared edges file}

\item{taxa}{Prepared taxed features file}

\item{output}{Output file}

\item{candidates_final}{Number of final candidates to keep}

\item{weight_spectral}{Weight for the spectral score}

\item{weight_chemical}{Weight for the biological score}

\item{weight_biological}{Weight for the chemical consistency score}

\item{score_biological_domain}{Score for a \code{domain} match
(should be lower than \code{kingdom})}

\item{score_biological_kingdom}{Score for a \code{kingdom} match
(should be lower than \code{phylum})}

\item{score_biological_phylum}{Score for a \code{phylum} match
(should be lower than \code{class})}

\item{score_biological_class}{Score for a \code{class} match
(should be lower than \code{order})}

\item{score_biological_order}{Score for a \code{order} match
(should be lower than \code{infraorder})}

\item{score_biological_infraorder}{Score for a \code{infraorder} match
(should be lower than \code{order})}

\item{score_biological_family}{Score for a \code{family} match
(should be lower than \code{subfamily})}

\item{score_biological_subfamily}{Score for a \code{subfamily} match
(should be lower than \code{family})}

\item{score_biological_tribe}{Score for a \code{tribe} match
(should be lower than \code{subtribe})}

\item{score_biological_subtribe}{Score for a \code{subtribe} match
(should be lower than \code{genus})}

\item{score_biological_genus}{Score for a \code{genus} match
(should be lower than \code{subgenus})}

\item{score_biological_subgenus}{Score for a \code{subgenus} match
(should be lower than \code{species})}

\item{score_biological_species}{Score for a \code{species} match
(should be lower than \code{subspecies})}

\item{score_biological_subspecies}{Score for a \code{subspecies} match
(should be lower than \code{variety})}

\item{score_biological_variety}{Score for a \code{variety} match
(should be the highest)}

\item{score_chemical_cla_kingdom}{Score for a \verb{Classyfire kingdom} match
(should be lower than \verb{ Classyfire superclass})}

\item{score_chemical_cla_superclass}{Score for a \verb{Classyfire superclass} match
(should be lower than \verb{Classyfire class})}

\item{score_chemical_cla_class}{Score for a \verb{Classyfire class} match
(should be lower than \verb{Classyfire parent})}

\item{score_chemical_cla_parent}{Score for a \verb{Classyfire parent} match
(should be the highest)}

\item{score_chemical_npc_pathway}{Score for a \verb{NPC pathway} match
(should be lower than \verb{ NPC superclass})}

\item{score_chemical_npc_superclass}{Score for a \verb{NPC superclass}
match (should be lower than \verb{NPC class})}

\item{score_chemical_npc_class}{Score for a \verb{NPC class} match
(should be the highest)}

\item{minimal_consistency}{Minimal consistency score for a class. FLOAT}

\item{minimal_ms1_bio}{Minimal biological score to keep MS1 based annotation}

\item{minimal_ms1_chemo}{Minimal chemical score to keep MS1 based annotation}

\item{minimal_ms1_condition}{Condition to be used. Must be "OR" or "AND".}

\item{ms1_only}{Keep only MS1 annotations. BOOLEAN}

\item{compounds_names}{Report compounds names. Can be very large. BOOLEAN}

\item{high_confidence}{Report high confidence candidates only. BOOLEAN}

\item{remove_ties}{Remove ties. BOOLEAN}

\item{summarize}{Summarize results (1 row per feature). BOOLEAN}

\item{pattern}{Pattern to identify your job. STRING}

\item{force}{Force parameters. Use it at your own risk}
}
\value{
The path to the weighted annotations
}
\description{
This function weights annotations.
}
\examples{
\dontrun{
copy_backbone()
go_to_cache()
github <- "https://raw.githubusercontent.com/"
repo <- "taxonomicallyinformedannotation/tima-example-files/main/"
dir <- paste0(github, repo)
library <- get_params(step = "weight_annotations")$files$libraries$sop$merged$keys |>
  gsub(
    pattern = ".gz",
    replacement = "",
    fixed = TRUE
  )
org_tax_ott <- paste0(
  "data/interim/libraries/",
  "sop/merged/organisms/taxonomies/ott.tsv"
)
str_stereo <- paste0(
  "data/interim/libraries/",
  "sop/merged/structures/stereo.tsv"
)
annotations <- paste0(
  "data/interim/annotations/",
  "example_annotationsFiltered.tsv"
)
canopus <- paste0(
  "data/interim/annotations/",
  "example_canopusPrepared.tsv"
)
formula <- paste0(
  "data/interim/annotations/",
  "example_formulaPrepared.tsv"
)
components <- paste0(
  "data/interim/features/",
  "example_componentsPrepared.tsv"
)
edges <- paste0(
  "data/interim/features/",
  "example_edges.tsv"
)
taxa <- paste0(
  "data/interim/taxa/",
  "example_taxed.tsv"
)
get_file(url = paste0(dir, library), export = library)
get_file(url = paste0(dir, org_tax_ott), export = org_tax_ott)
get_file(url = paste0(dir, str_stereo), export = str_stereo)
get_file(url = paste0(dir, annotations), export = annotations)
get_file(url = paste0(dir, canopus), export = canopus)
get_file(url = paste0(dir, formula), export = formula)
get_file(url = paste0(dir, components), export = components)
get_file(url = paste0(dir, edges), export = edges)
get_file(url = paste0(dir, taxa), export = taxa)
weight_annotations(
  library = library,
  org_tax_ott = org_tax_ott,
  str_stereo = str_stereo,
  annotations = annotations,
  canopus = canopus,
  formula = formula,
  components = components,
  edges = edges,
  taxa = taxa
)
unlink("data", recursive = TRUE)
}
}
\seealso{
annotate_masses weight_bio weight_chemo
}
